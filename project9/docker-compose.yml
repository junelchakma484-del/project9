version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:13
    container_name: face_mask_postgres
    environment:
      POSTGRES_DB: face_mask_detection
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - face_mask_network

  # Redis for message queue
  redis:
    image: redis:6-alpine
    container_name: face_mask_redis
    ports:
      - "6379:6379"
    networks:
      - face_mask_network

  # MQTT Broker
  mosquitto:
    image: eclipse-mosquitto:2.0
    container_name: face_mask_mqtt
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mqtt/config:/mosquitto/config
      - ./mqtt/data:/mosquitto/data
      - ./mqtt/log:/mosquitto/log
    networks:
      - face_mask_network

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: face_mask_backend
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/face_mask_detection
      - REDIS_URL=redis://redis:6379/0
      - MQTT_BROKER=mosquitto
      - MQTT_PORT=1883
    volumes:
      - ./logs:/app/logs
      - ./models:/app/models
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - redis
      - mosquitto
    networks:
      - face_mask_network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: face_mask_frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - face_mask_network

  # Grafana (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: face_mask_grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    ports:
      - "3001:3000"
    depends_on:
      - postgres
    networks:
      - face_mask_network

volumes:
  postgres_data:
  grafana_data:

networks:
  face_mask_network:
    driver: bridge
